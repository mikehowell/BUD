<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BizUnit.BizTalkSteps</name>
    </assembly>
    <members>
        <member name="T:BizUnit.OrchestrationConductorStep">
            <summary>
            The OrchestrationConductorStep may be used to stop/start an orchestration.
            </summary>
            
            <remarks>
            The following shows an example of the Xml representation of this test step.
            
            <code escaped="true">
            <TestStep assemblyPath="" typeName="BizUnit.OrchestrationConductorStep, BizUnit.BizTalkSteps">
            	<DelayForCompletion>5</DelayForCompletion> <!-- Optional, seconds to delay for this step to complete -->
            	<AssemblyName>BizUnitTest.Process</AssemblyName>
            	<OrchestrationName>BizUnitTest.Process.SubmitToLedger</OrchestrationName>
            	<Action>Start</Action>
            </TestStep>
            </code>
            <list type="table">
            	<listheader>
            		<term>Tag</term>
            		<description>Description</description>
            	</listheader>
            	<item>
            		<term>DelayForCompletion</term>
            		<description>The delay before executing the step <para>(optional)</para></description>
            	</item>
            	<item>
            		<term>AssemblyName</term>
            		<description>The name of the assembly containing the orchestration, e.g. BizUnitTest.Process</description>
            	</item>
            	<item>
            		<term>OrchestrationName</term>
            		<description>The name of the orchestration to start/stop</description>
            	</item>
            	<item>
            		<term>Action</term>
            		<description>Start|Stop</description>
            	</item>
            </list>
            </remarks>	
        </member>
        <member name="M:BizUnit.OrchestrationConductorStep.Execute(System.Xml.XmlNode,BizUnit.Context)">
            <summary>
            ITestStep.Execute() implementation
            </summary>
            <param name='testConfig'>The Xml fragment containing the configuration for this test step</param>
            <param name='context'>The context for the test, this holds state that is passed beteen tests</param>
        </member>
        <member name="T:BizUnit.BAMDeploymentStep">
             <summary>
             The BAMDeploymentStep deloys a BAM definition.
             </summary>
             
             <remarks>
             The following shows an example of the Xml representation of this test step.
             
             <code escaped="true">
             <TestStep assemblyPath="" typeName="BizUnit.BAMDeployment, BizUnit.BizTalkSteps">
            		<DelayForCompletion>5</DelayForCompletion> <!-- Optional, seconds to delay for this step to complete -->
            		<TrackingFolderPath>C:\Program Files\Microsoft BizTalk Server 2004\Tracking</TrackingFolderPath>
            		<BAMDefinitionXmlFilePath>C:\BizUnitTest\Solution\View All.xml</BAMDefinitionXmlFilePath>
            		<Action>Deploy</Action>
             </TestStep>
             </code>
            
            	<list type="table">
            		<listheader>
            			<term>Tag</term>
            			<description>Description</description>
            		</listheader>
            		<item>
            			<term>DelayForCompletion</term>
            			<description>The delay for this step to complete in seconds <para>(optional)</para></description>
            		</item>
            		<item>
            			<term>TrackingFolderPath</term>
            			<description>The Tracking directory for BizTalk Server</description>
            		</item>
            		<item>
            			<term>BAMDefinitionXmlFilePath</term>
            			<description>The path to the BAM definition file</description>
            		</item>
            		<item>
            			<term>Action</term>
            			<description>Deploy|Undeploy</description>
            		</item>
            	</list>
            	</remarks>
        </member>
        <member name="M:BizUnit.BAMDeploymentStep.Execute(System.Xml.XmlNode,BizUnit.Context)">
            <summary>
            ITestStep.Execute() implementation
            </summary>
            <param name='testConfig'>The Xml fragment containing the configuration for this test step</param>
            <param name='context'>The context for the test, this holds state that is passed beteen tests</param>
        </member>
        <member name="T:BizUnit.CrossReferenceDataVerificationStep">
            <summary>
            The CrossReferenceDataVerificationStep reads email from a POP3 server.
            </summary>
            
            <remarks>
            The following shows an example of the Xml representation of this test step.
            
            <code escaped="true">
            <TestStep assemblyPath="" typeName="BizUnit.CrossReferenceDataVerificationStep, BizUnit.BizTalkSteps">
            	<VerifyId appInstance="application1" idXRef="Customer">25</VerifyId> 
            	<VerifyValue appType="application2" idXRef="Customer">12LK</VerifyValue> 
            </TestStep>
            </code>
            
            <list type="table">
            	<listheader>
            		<term>Tag</term>
            		<description>Description</description>
            	</listheader>
            	<item>
            		<term>VerifyId</term>
            		<description>The Id to varify</description>
            	</item>
            	<item>
            		<term>VerifyValue</term>
            		<description>The expected value</description>
            	</item>
            </list>
            </remarks>
        </member>
        <member name="M:BizUnit.CrossReferenceDataVerificationStep.Execute(System.Xml.XmlNode,BizUnit.Context)">
            <summary>
            ITestStep.Execute() implementation
            </summary>
            <param name='testConfig'>The Xml fragment containing the configuration for this test step</param>
            <param name='context'>The context for the test, this holds state that is passed beteen tests</param>
        </member>
        <member name="T:BizUnit.ReceivePortConductorStep">
             <summary>
             </summary>
            <remarks>
            The following shows an example of the Xml representation of this test step.
            
            <code escaped="true">
            <TestStep assemblyPath="" typeName="BizUnit.ReceivePortConductorStep, BizUnit.BizTalkSteps">
            	<DelayForCompletion>5</DelayForCompletion> <!-- Optional, seconds to delay for this step to complete -->
            	<ReceivePortName></ReceivePortName>
            	<ReceiveLocationName></ReceiveLocationName>
            	<Action>Enable</Action>
            </TestStep>
            </code>
            
            <list type="table">
            	<listheader>
            		<term>Tag</term>
            		<description>Description</description>
            	</listheader>
            	<item>
            		<term>DelayForCompletion</term>
            		<description>The number of seconds to deplay for this step to complete</description>
            	</item>
            	<item>
            		<term>ReceivePortName</term>
            		<description>The name of the receive port to containing the receive location to enable/dissable</description>
            	</item>
            	<item>
            		<term>ReceiveLocationName</term>
            		<description>The name of the receive location to enable/dissable</description>
            	</item>
            	<item>
            		<term>Action</term>
            		<description>Enable|Disable</description>
            	</item>
            </list>
            </remarks>
        </member>
        <member name="M:BizUnit.ReceivePortConductorStep.Execute(System.Xml.XmlNode,BizUnit.Context)">
            <summary>
            ITestStep.Execute() implementation
            </summary>
            <param name='testConfig'>The Xml fragment containing the configuration for this test step</param>
            <param name='context'>The context for the test, this holds state that is passed beteen tests</param>
        </member>
        <member name="T:BizUnit.HostConductorStep">
            <summary>
            The HostConductorStep test step maybe used to start or stop a BizTalk host
            </summary>
            
            <remarks>
            The following shows an example of the Xml representation of this test step.
            
            <code escaped="true">
            <TestStep assemblyPath="" typeName="BizUnit.HostConductorStep, BizUnit.BizTalkSteps">
            	<Action>start|stop</Action>
            	<HostInstanceName>BizTalkServerApplication</HostInstanceName>
            	<Server>RecvHost</Server>
                <Logon>zeus\\administrator</Logon>
                <PassWord>appollo*1</PassWord>
                <GrantLogOnAsService>true</GrantLogOnAsService>
            </TestStep>
            </code>
            
            <list type="table">
            	<listheader>
            		<term>Tag</term>
            		<description>Description</description>
            	</listheader>
            	<item>
            		<term>HostInstanceName</term>
            		<description>The name of the host instance to start|stop</description>
            	</item>
            	<item>
            		<term>Action</term>
            		<description>A value of start or stop<para>(start|stop)</para></description>
            	</item>
            	<item>
            		<term>Server</term>
            		<description>The server where the Biztalk host instance is running (optional)</description>
            	</item>
            	<item>
            		<term>Logon</term>
            		<description>String containing the logon information used by the host instance (optional - unless Server is supplied)</description>
            	</item>
            	<item>
            		<term>PassWord</term>
            		<description>String containing the password for the host (optional - unless Logon is supplied)</description>
            	</item>
            	<item>
            		<term>GrantLogOnAsService (optional - unless Logon is supplied)</term>
            		<description>Boolean determining whether the 'Log On As Service' privilege should be automatically granted to the specified logon user or not. This flag only has effect when the HostType property is set to In-process</description>
            	</item>
            </list>
            </remarks>	
        </member>
        <member name="M:BizUnit.HostConductorStep.Execute(System.Xml.XmlNode,BizUnit.Context)">
            <summary>
            ITestStep.Execute() implementation
            </summary>
            <param name='testConfig'>The Xml fragment containing the configuration for this test step</param>
            <param name='context'>The context for the test, this holds state that is passed beteen tests</param>
        </member>
        <member name="T:BizUnit.ReceiveLocationEnabledStep">
            <summary>
            The ReceiveLocationEnabledStep test step checks to determine whether a specific receive location is enabled or disabled.
            </summary>
            
            <remarks>
            The following shows an example of the Xml representation of this test step.
            
            <code escaped="true">
            <TestStep assemblyPath="" typeName="BizUnit.ReceiveLocationEnabledStep, BizUnit.BizTalkSteps">
            	<ReceiveLocationName>GovenorIn</ReceiveLocationName>
            	<IsDisabled>true</IsDisabled>
            </TestStep>
            </code>
            
            <list type="table">
            	<listheader>
            		<term>Tag</term>
            		<description>Description</description>
            	</listheader>
            	<item>
            		<term>ReceiveLocationName</term>
            		<description>The name of the receive location to check</description>
            	</item>
            	<item>
            		<term>IsDisabled</term>
            		<description>If true is specified then the test step will check to see that the receive location is disabled, if false, the step will check it is enabled</description>
            	</item>
            </list>
            </remarks>
        </member>
        <member name="M:BizUnit.ReceiveLocationEnabledStep.Execute(System.Xml.XmlNode,BizUnit.Context)">
            <summary>
            ITestStep.Execute() implementation
            </summary>
            <param name='testConfig'>The Xml fragment containing the configuration for this test step</param>
            <param name='context'>The context for the test, this holds state that is passed beteen tests</param>
        </member>
        <member name="T:BizUnit.CrossReferenceSeedLoadStep">
            <summary>
            The CrossReferenceSeedLoadStep 
            </summary>
            
            <remarks>
            The following shows an example of the Xml representation of this test step.
            
            <code escaped="true">
            <TestStep assemblyPath="" typeName="BizUnit.CrossReferenceSeedLoadStep, BizUnit.BizTalkSteps">
            	<SeedDataSetupFilePath>c:\SeedData\Setup.xml</SeedDataSetupFilePath> <!-- path relative to the testframework assembly setup file -->
            </TestStep>
            </code>
            
            <list type="table">
            	<listheader>
            		<term>Tag</term>
            		<description>Description</description>
            	</listheader>
            	<item>
            		<term>SeedDataSetupFilePath</term>
            		<description>The FILE path to the setup FILE</description>
            	</item>
            </list>
            </remarks>
        </member>
        <member name="M:BizUnit.CrossReferenceSeedLoadStep.Execute(System.Xml.XmlNode,BizUnit.Context)">
            <summary>
            ITestStep.Execute() implementation
            </summary>
            <param name='testConfig'>The Xml fragment containing the configuration for this test step</param>
            <param name='context'>The context for the test, this holds state that is passed beteen tests</param>
        </member>
        <member name="T:BizUnit.FactBasedRuleEngineStep">
             <summary>
             Summary description for FactBasedRuleEngineStep.
             </summary>
             
             <remarks>
             The following shows an example of the Xml representation of this test step.
            
             <code escaped="true">
            	<TestStep assemblyPath="" typeName="BizUnit.FactBasedRuleEngineStep, BizUnit.BizTalkSteps">
            		<RuleStoreName>C:\Program Files\Microsoft BizTalk Server 2004\SDK\Utilities\TestFramework\SDK\SampleSolution\Test\BiztalkFunctionalTests\RulesTestCases\LoanProcessing.xml</RuleStoreName>
                 <RuleSetInfoCollectionName>LoanProcessing</RuleSetInfoCollectionName>
                 <DebugTracking>C:\Program Files\Microsoft BizTalk Server 2004\SDK\Utilities\TestFramework\SDK\SampleSolution\Test\BiztalkFunctionalTests\RulesTestCases\outputtraceforLoanPocessing.txt</DebugTracking>
                 <ResultFilePath>C:\Program Files\Microsoft BizTalk Server 2004\SDK\Utilities\TestFramework\SDK\SampleSolution\Test\BiztalkFunctionalTests\RulesTestCases</ResultFilePath>
                 <Facts>
                    <Fact type="document" schemaType="LoanProcessing" instanceDocument="C:\Program Files\Microsoft BizTalk Server 2004\SDK\Utilities\TestFramework\SDK\SampleSolution\Test\BiztalkFunctionalTests\RulesTestCases\SampleLoan.xml"/>
                    <Fact type="object" assemblyPath="C:\Program Files\Microsoft Biztalk Server\SDK\Samples\Business Rules\Business Rules Hello World1\MySampleLibrary\bin\Debug\MySampleLibrary.dll" typeName="Microsoft.Samples.BizTalk.BusinessRulesHelloWorld1.MySampleLibrary.MySampleBusinessObject"/>
                    <Fact type="dataConnection" connectionString="" dataset="" tableName=""/>
                    <Fact type="dataTable" connectionString="" command="" dataset="" tableName=""/>
                    <Fact type="dataRow" connectionString="" command="" dataset="" tableName=""/>
                 </Facts>
             
            		<!-- Note: Validation step could be any generic validation step -->	
            		<ValidationStep assemblyPath="" typeName="BizUnit.XmlValidationStep">
            			<XmlSchemaPath>.\TestData\PurchaseOrder.xsd</XmlSchemaPath>
            			<XmlSchemaNameSpace>http://SendMail.PurchaseOrder</XmlSchemaNameSpace>
            			<XPathList>
            				<XPathValidation query="/*[local-name()='PurchaseOrder' and namespace-uri()='http://SendMail.PurchaseOrder']/*[local-name()='PONumber' and namespace-uri()='']">PONumber_0</XPathValidation>
            			</XPathList>
            		</ValidationStep>			
             
            	</TestStep>
            	</code>
            	
            	<list type="table">
            		<listheader>
            			<term>Tag</term>
            			<description>Description</description>
            		</listheader>
            		<item>
            			<term>RuleStoreName</term>
            			<description>The location of the rule store</description>
            		</item>
            		<item>
            			<term>RuleSetInfoCollectionName</term>
            			<description>The name of the rule set collection</description>
            		</item>
            		<item>
            			<term>DebugTracking</term>
            			<description>Location of the debug tracking</description>
            		</item>
            		<item>
            			<term>ResultFilePath</term>
            			<description>The path used to write updated fact documents to</description>
            		</item>
            		<item>
            			<term>Facts</term>
            			<description>Facts to pass to rules engine prior to ruleset execution</description>
            		</item>	
            	</list>
            	</remarks>
        </member>
        <member name="M:BizUnit.FactBasedRuleEngineStep.Execute(System.Xml.XmlNode,BizUnit.Context)">
            <summary>
            ITestStep.Execute() implementation
            </summary>
            <param name='testConfig'>The Xml fragment containing the configuration for this test step</param>
            <param name='context'>The context for the test, this holds state that is passed beteen tests</param>
        </member>
        <member name="T:BizUnit.CrossReferenceSeedClearStep">
            <summary>
            The CrossReferenceSeedClearStep 
            </summary>
            
            <remarks>
            The following shows an example of the Xml representation of this test step.
            
            <code escaped="true">
            <TestStep assemblyPath="" typeName="BizUnit.CrossReferenceSeedClearStep, BizUnit.BizTalkSteps">
            	<LoginId>sa</LoginId> 
            	<password>password</password> 
            </TestStep>
            </code>
            
            <list type="table">
            	<listheader>
            		<term>Tag</term>
            		<description>Description</description>
            	</listheader>
            	<item>
            		<term>LoginId</term>
            		<description>The logon Id</description>
            	</item>
            	<item>
            		<term>password</term>
            		<description>The password for the log on id</description>
            	</item>
            </list>
            </remarks>
        </member>
        <member name="M:BizUnit.CrossReferenceSeedClearStep.Execute(System.Xml.XmlNode,BizUnit.Context)">
            <summary>
            ITestStep.Execute() implementation
            </summary>
            <param name='testConfig'>The Xml fragment containing the configuration for this test step</param>
            <param name='context'>The context for the test, this holds state that is passed beteen tests</param>
        </member>
    </members>
</doc>
